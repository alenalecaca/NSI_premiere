def creation_arbre(r,profondeur):
    """r : la racine (str ou int). la profondeur de l’arbre (int)"""
    Arbre = [r]+[None for i in range(2**(profondeur+1)-2)]
    return Arbre

def insertion_noeud(arbre,n,fg,fd):
    """Insére les noeuds et leurs enfants dans l’arbre"""
    indice = arbre.index(n)
    arbre[2*indice+1] = fg
    arbre[2*indice+2] = fd
# création de l’arbre
arbre = creation_arbre("r",5)
# ajout des noeuds par niveau de gauche à droite
insertion_noeud(arbre,"r","a","b")
insertion_noeud(arbre,"a","c","d")
insertion_noeud(arbre,"b","e","f")
insertion_noeud(arbre,"c",None,"h")
insertion_noeud(arbre,"d","i","j")
insertion_noeud(arbre,"e","k",None)
insertion_noeud(arbre,"f",None,None)
insertion_noeud(arbre,"h",None,None)
insertion_noeud(arbre,"i",None,None)
insertion_noeud(arbre,"j","m",None)
insertion_noeud(arbre,"k",None,None)
insertion_noeud(arbre,"m",None,None)
#pour vérifier
print(len(arbre))
print(arbre)

def parent(arbre,p):
    if p in arbre:
        indice = arbre.index(p)
        if indice%2 == 0:
            return arbre[(indice-2)//2]
        else:
            return arbre[(indice-1)//2]
        
print(parent(arbre,"a"))

def arbre_vide(arbre):
    if len(arbre) == 0:
        return True 
    else:
        return False
print(arbre_vide(arbre))

def enfants_noeuds(arbre,p):
    if p in arbre:
        indice = arbre.index(p)
        return arbre[indice*2+1],arbre[indice*2+2]
print(enfants_noeuds(arbre,"a"))

def fils_gauche(arbre,p):
    if p in arbre:
        indice = arbre.index(p)
        return arbre[indice*2+1]
print(fils_gauche(arbre,"a"))


def fils_droite(arbre,p):
    if p in arbre:
        indice = arbre.index(p)
        return arbre[indice*2+2]
print(fils_droite(arbre,"a"))
